/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketBooth, TicketBoothInterface } from "../TicketBooth";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ticket",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "enter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasEntered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161054c38038061054c833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610435806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806324d70dea1461003b578063e97dcb621461006b575b600080fd5b6100556004803603810190610050919061023f565b610075565b6040516100629190610287565b60405180910390f35b610073610095565b005b60016020528060005260406000206000915054906101000a900460ff1681565b600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e3360016040518363ffffffff1660e01b81526004016100f2929190610300565b60206040518083038186803b15801561010a57600080fd5b505afa15801561011e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101429190610355565b1015610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a906103df565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061020c826101e1565b9050919050565b61021c81610201565b811461022757600080fd5b50565b60008135905061023981610213565b92915050565b600060208284031215610255576102546101dc565b5b60006102638482850161022a565b91505092915050565b60008115159050919050565b6102818161026c565b82525050565b600060208201905061029c6000830184610278565b92915050565b6102ab81610201565b82525050565b6000819050919050565b6000819050919050565b6000819050919050565b60006102ea6102e56102e0846102b1565b6102c5565b6102bb565b9050919050565b6102fa816102cf565b82525050565b600060408201905061031560008301856102a2565b61032260208301846102f1565b9392505050565b610332816102bb565b811461033d57600080fd5b50565b60008151905061034f81610329565b92915050565b60006020828403121561036b5761036a6101dc565b5b600061037984828501610340565b91505092915050565b600082825260208201905092915050565b7f596f75206e6565642061207469636b6574000000000000000000000000000000600082015250565b60006103c9601183610382565b91506103d482610393565b602082019050919050565b600060208201905081810360008301526103f8816103bc565b905091905056fea2646970667358221220bd4d67aabf95ae67c2e4424f48370d52a8ba17062960180767472ed05f584ce964736f6c63430008090033";

export class TicketBooth__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _ticket: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketBooth> {
    return super.deploy(_ticket, overrides || {}) as Promise<TicketBooth>;
  }
  getDeployTransaction(
    _ticket: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ticket, overrides || {});
  }
  attach(address: string): TicketBooth {
    return super.attach(address) as TicketBooth;
  }
  connect(signer: Signer): TicketBooth__factory {
    return super.connect(signer) as TicketBooth__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketBoothInterface {
    return new utils.Interface(_abi) as TicketBoothInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketBooth {
    return new Contract(address, _abi, signerOrProvider) as TicketBooth;
  }
}
