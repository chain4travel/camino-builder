"use strict";

exports.__esModule = true;
exports["default"] = void 0;
var _CognitoUser = _interopRequireDefault(require("./CognitoUser"));
var _internals = require("./internals");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); } /*!
                                                                                                                                                                                                          * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
                                                                                                                                                                                                          * SPDX-License-Identifier: Apache-2.0
                                                                                                                                                                                                          */
var USER_POOL_ID_MAX_LENGTH = 55;

/** @class */
var CognitoUserPool = /*#__PURE__*/function (_InternalCognitoUserP) {
  _inheritsLoose(CognitoUserPool, _InternalCognitoUserP);
  function CognitoUserPool() {
    return _InternalCognitoUserP.apply(this, arguments) || this;
  }
  var _proto = CognitoUserPool.prototype;
  /**
   * @typedef {object} SignUpResult
   * @property {CognitoUser} user New user.
   * @property {bool} userConfirmed If the user is already confirmed.
   */
  /**
   * method for signing up a user
   * @param {string} username User's username.
   * @param {string} password Plain-text initial password entered by user.
   * @param {(AttributeArg[])=} userAttributes New user attributes.
   * @param {(AttributeArg[])=} validationData Application metadata.
   * @param {(AttributeArg[])=} clientMetadata Client metadata.
   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.
   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger
   * @returns {void}
   */
  _proto.signUp = function signUp(username, password, userAttributes, validationData, callback, clientMetadata) {
    return _InternalCognitoUserP.prototype.signUp.call(this, username, password, userAttributes, validationData, callback, clientMetadata);
  };
  return CognitoUserPool;
}(_internals.InternalCognitoUserPool);
exports["default"] = CognitoUserPool;